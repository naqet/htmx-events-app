package vevents;

import "htmx-events-app/views/layout"
import "htmx-events-app/db"
import "time"
import "htmx-events-app/views/components"
import "fmt"
import "htmx-events-app/utils"

templ Details(event db.Event, events []db.Event, isOwner bool) {
@vlayout.Base() {
@vlayout.Header()
<div class="p-4 grid gap-4 grid-cols-4">
    <section class="grid gap-2 card content-start">
        <h1 class="text-4xl font-bold">{ event.Title }</h1>
        <p class="text-black/70 min-h-32">{ event.Description }</p>
        <ul class="grid gap-2">
            <li class="grid">
                Date
                <span class="text-black/70">
                    { event.StartDate.Format(time.DateOnly) }
                </span>
            </li>
            <li class="grid">
                Location
                <span class="text-black/70">{ event.Place }</span>
            </li>
            <li>
                Hosts
                <ul class="flex gap-2">
                    for _, host := range event.Hosts {
                    <li class="rounded-full h-8 w-8 grid place-items-center bg-gray-200">
                        { getFirstLetter(host.Name) }
                    </li>
                    }
                </ul>
            </li>
        </ul>
    </section>
    <section class="card flex flex-col gap-2">
        <h2 class="text-xl font-semibold">Attendees</h2>
        <ul class="grid gap-2 h-full max-h-60 content-start overflow-scroll">
            for _, attendee := range event.Attendees {
            <li class="flex gap-2 items-center">
                <span class="w-8 h-8 rounded-full bg-gray-200 grid place-items-center">
                    { getFirstLetter(attendee.Name) }
                </span>
                <div class="grid items-center">
                    { attendee.Name }
                </div>
            </li>
            }
        </ul>
        if isOwner {
        <div class="justify-self-end mt-auto pt-2 border-t">
            @vcomponents.InviteAttendeesPanel(event.Title)
        </div>
        }
    </section>
    <section class="grid gap-2 h-fit card col-span-2">
        <h2 class="font-semibold text-xl">Agenda</h2>
        <p class="text-black/70">Check out the schedule of events and plan your day.</p>
        <hr data-value={ fmt.Sprintf("%d %s", event.StartDate.Day(), event.StartDate.Month().String()) }
            class="my-2 overflow-visible text-center text-sm after:px-2 after:content-[attr(data-value)] after:text-black/70 after:relative after:inline-block after:-top-[0.7rem] after:bg-secondary" />
        <ul class="grid gap-6 [&:not(:last-child)]:border-b [&:not(:last-child)]:pb-4" id="agendaPoints">
            for _, point := range event.Agenda {
            @vcomponents.AgendaPoint(point, isOwner)
            }
        </ul>
        if isOwner {
        <button class="text-sm text-center text-black/70"
            onclick="document.querySelector('#addAgendaPoint').showModal()">+ Add point</button>
        <dialog id="addAgendaPoint" class="p-4 rounded-md">
            <form hx-post={ "/events/" + event.Title + "/agenda-point" } hx-swap="beforeend" hx-target="#agendaPoints"
                hx-ext="json-enc" hx-trigger="submit" class="grid gap-2 w-80 max-w-full"
                hx-on::after-request="if(event.detail.successful){this.reset();this.parentElement.close();}">
                <h2 class="font-semibold text-center text-lg">Agenda Point Details</h2>
                <label class="grid">
                    Title
                    <input name="title" required />
                </label>
                <label class="grid">
                    Description
                    <textarea name="description" rows="2" required></textarea>
                </label>
                <label class="grid">
                    Start Time
                    <input name="startTime" type="datetime-local" min={ event.StartDate.Format(utils.DATETIME_LOCAL) }
                        max={ event.EndDate.Format(utils.DATETIME_LOCAL) } required />
                </label>
                <button class="border p-2 rounded-md">Submit</button>
            </form>
        </dialog>
        }
    </section>
    <section class="card col-span-2">
        <h2 class="font-semibold text-xl">Travel Arrangements</h2>
        <p class="text-black/70">Check out the schedule of events and plan your day.</p>
    </section>
</div>
}
}
