package vevents;

import "htmx-events-app/db"
import "time"
import "fmt"

func handleHosts(hosts []*db.User) []*db.User {
    if len(hosts) < 3 {
        return hosts
    }

    return hosts[:3]
}

templ Table(events []db.Event) {
	<div class="m-4 p-2 border rounded-md overflow-x-scroll bg-secondary">
		<table class="w-full caption-bottom text-sm min-w-[1200px]">
			<thead>
				<tr class="border-b h-12 text-left [&>th]:px-4">
					<th class="w-1/6">Title</th>
					<th class="w-5/12">Description</th>
					<th class="w-1/6">Place</th>
					<th class="w-1/12">Start Date</th>
					<th class="w-1/12">End Date</th>
					<th class="w-1/12">Hosts</th>
				</tr>
			</thead>
			<tbody>
				if len(events) > 0 {
					for _, event := range events {
						<tr class="border-b last:border-none">
							<td class="p-4 align-middle">
								<a class="font-medium hover:underline" href={ templ.URL(fmt.Sprintf("/events/%s", event.Title)) }>
									{ event.Title }
								</a>
							</td>
							<td class="p-4 max-w-xl truncate">
								{ event.Description }
							</td>
							<td class="p-4">{ event.Place }</td>
							<td class="p-4">{ event.StartDate.Format(time.DateOnly) }</td>
							<td class="p-4">{ event.EndDate.Format(time.DateOnly) }</td>
							<td class="p-4">
								<ul class="flex items-center space-x-2">
									for _, host := range handleHosts(event.Hosts) {
                                        <li class="rounded-full h-8 w-8 grid place-items-center bg-gray-200">
                                            { getFirstLetter(host.Name) }
                                        </li>
									}
								</ul>
							</td>
						</tr>
					}
				} else {
					<tr>
                        <td class="text-center text-black/70 pb-4 pt-[1.125rem]" colspan="6">No events</td>
                    </tr>
				}
			</tbody>
		</table>
	</div>
}
